{"version":3,"sources":["components/HomePage/HomePage.tsx","components/Navbar/PageNavLink/PageNavLink.tsx","components/Navbar/Navbar.tsx","components/NotFoundPage/NotFoundPage.tsx","api.ts","components/Loader/Loader.tsx","components/PeopleTable/PersonalLink/PersonalLink.tsx","components/PeopleTable/PersonalInfo/PersonalInfo.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","PageNavLink","to","text","isActive","classNames","Navbar","role","NotFoundPage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","ok","Error","json","Loader","PersonalLink","person","slug","sex","name","PersonalInfo","people","born","died","motherName","fatherName","useParams","parent","parentName","find","personItem","PeopleTable","hasError","isLoading","hasTable","length","hasPeopleMessage","map","PeoplePage","useState","setPeople","setIsLoading","setHasError","useEffect","catch","finally","App","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.b2004bab.chunk.js","sourcesContent":["import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","import React from 'react';\nimport { PageNavLink } from './PageNavLink/PageNavLink';\n\nexport const Navbar: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink\n          to=\"/\"\n          text=\"Home\"\n        />\n        <PageNavLink\n          to=\"/people\"\n          text=\"People\"\n        />\n      </div>\n    </div>\n  </nav>\n);\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../../types';\n\ntype Props = {\n  person: Person | string,\n};\n\nexport const PersonalLink: React.FC<Props> = ({ person }) => {\n  if (typeof person === 'string') {\n    return (\n      <>\n        {person}\n      </>\n    );\n  }\n\n  const {\n    slug,\n    sex,\n    name,\n  } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={classNames({\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../../types';\nimport { PersonalLink } from '../PersonalLink/PersonalLink';\n\ntype Props = {\n  person: Person,\n  people: Person[],\n};\n\nexport const PersonalInfo: React.FC<Props> = ({ person, people }) => {\n  const {\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n  } = person;\n\n  const { slug } = useParams();\n\n  const parent = (parentName: string | null) => people\n    .find(personItem => personItem.name === parentName);\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames(\n        { 'has-background-warning': slug === person.slug },\n      )}\n    >\n      <td>\n        <PersonalLink person={person} />\n      </td>\n      <td>\n        {sex}\n      </td>\n      <td>\n        {born}\n      </td>\n      <td>\n        {died}\n      </td>\n      <td>\n        {!motherName\n          ? '-'\n          : (<PersonalLink person={parent(motherName) || motherName} />)}\n      </td>\n      <td>\n        {!fatherName\n          ? '-'\n          : (<PersonalLink person={parent(fatherName) || fatherName} />)}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PersonalInfo } from './PersonalInfo/PersonalInfo';\n\ntype Props = {\n  people: Person[],\n  hasError: boolean,\n  isLoading: boolean,\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  people,\n  hasError,\n  isLoading,\n}) => {\n  const hasTable = people.length > 0;\n  const hasPeopleMessage = !hasTable && !isLoading && !hasError;\n\n  return (\n    <div className=\"box table-container\">\n      {isLoading && <Loader />}\n      {hasError && (\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          Something went wrong\n        </p>\n      )}\n\n      {hasPeopleMessage && (\n        <p data-cy=\"noPeopleMessage\">\n          There are no people on the server\n        </p>\n      )}\n\n      {hasTable && (\n        <table\n          data-cy=\"peopleTable\"\n          className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n        >\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Sex</th>\n              <th>Born</th>\n              <th>Died</th>\n              <th>Mother</th>\n              <th>Father</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {people.map((person) => (\n              <PersonalInfo\n                key={person.slug}\n                person={person}\n                people={people}\n              />\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n\n  useEffect(() => {\n    getPeople()\n      .then(setPeople)\n      .catch(() => {\n        setTimeout(() => setHasError(false), 3000);\n        setHasError(true);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <PeopleTable\n          people={people}\n          hasError={hasError}\n          isLoading={isLoading}\n        />\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport './App.scss';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { Navbar } from './components/Navbar/Navbar';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\n\nexport const App: React.FC = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}